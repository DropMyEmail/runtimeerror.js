{"name":"Runtimeerror.js","tagline":"nodejs app to create github issues, update (and reopen) existing issues. meant for posting production errors to github issues","body":"# RuntimeError.js\r\n\r\nWhy waste your time at *yet-another-middleman-website* to manage your errors. **Deploy your own, free runtimeerror.js & upgrade your Github Issues to manage error tracking directly.**\r\n\r\nClustered errors, full context & stacktrace in your email notifications, wontfix, direct email replies to `@johnappleseed` works as intended. What's not to like?\r\n\r\nNOTE: integrations to `trello`, `pivotal tracker` or any other things should be added as a [provider](https://github.com/develsadvocates/runtimeerror.js/tree/master/lib/providers)\r\n\r\n## How a human manage errors\r\n\r\n1. Use a generic error message to group errors, e.g. `Session#create: User id={N} not found`\r\n2. Create a new issue if the generic title is new (team will be notified via Github)\r\n3. Update occurrence `count` if issue already exist (no notifications, keep issue fresh)\r\n4. `Reopen` issue if it was `closed`, and add fresh debug data in comments (notify team of regression)\r\n5. Ignore if issue was labelled `wontfix` (no notifications)\r\n\r\n`runtimeerror.js` does exactly this.\r\n\r\n## 1. Setup github account for api purpose\r\n\r\nThe way github works is that the creator/commenter of an issue will not be notified. This is a correct logic, but does not suit our purpose.\r\n\r\nWe recommend using a separate `bot` github account instead of your own so that when errors happen, `bot` will create the issues and you'll get the github notifications. \r\n\r\n1. Create a separate `github` account, e.g. `bot`\r\n2. Add `bot` to the repository you want to integrate with.\r\n3. Go into [`Github.com > Account > Applications > Personal Access Tokens`](https://github.com/settings/tokens/new) and create a token for `bot` account, e.g. `token`\r\n4. Optionally, turn off all [`email` and `web` notifications](https://github.com/settings/notifications) for `bot` account\r\n\r\n## 2. Deploy to a server\r\n\r\nThe easiest option is to deploy on Heroku\r\n\r\n1. [Create a heroku app](https://dashboard.heroku.com/apps)\r\n2. `git push` this repository to your heroku app\r\n3. Optionally, set your environment variables (aka `heroku config:add`)\r\n\r\n```\r\nSECRET=<your token>\r\nREPO=<your org>/<your repo> # e.g. rails/rails\r\nPROVIDER=github # (optional, currently only supports github)\r\nLABEL=bug # (optional)\r\n```\r\n\r\nThis setup uses the `web.js` mechanism.\r\n\r\nSetting environment variables is optional because you can also use per-request config (see next point).\r\n\r\n### Per-Request config via email address\r\n\r\n`runtimeerror.js` parses the email address format to extract `REPO`, `SECRET`, `PROVIDER` in the format of `\"{repo}\" <{secret}@{provider}.com>`\r\n\r\n\r\nFor example:\r\n\r\n```\r\n\"rails/rails\" <aaabbccddeeff@github.com>\r\n```\r\n\r\nwould configure the error to be posted to\r\n\r\n```\r\nREPO=rails/rails\r\nSECRET=aaabbccddeeff\r\nPROVIDER=github\r\n```\r\n\r\nThis allows for multiple `repo/secret/provider` accounts to share the same instance of `runtimeerror.js` deployed\r\n\r\n## Mechanisms\r\n\r\n### web.js\r\n\r\nUpload an email as a bug report on Github Issues (email subject + email body). In production environment, we recommend setting environment variable `HIDE_UPLOAD_FORM=1` to hide this form.\r\n\r\n```\r\nnode web.js\r\n```\r\n\r\nThe web application is compatible with these popular error reporting tools\r\n\r\n* [bugsnag](https://github.com/develsadvocates/runtimeerror.js/blob/master/bugsnag.md)\r\n* [rollbar](https://github.com/develsadvocates/runtimeerror.js/blob/master/rollbar.md)\r\n* [runtimeerror_notifier gem](http://rubygems.org/gems/runtimeerror_notifier) (set the `email to` as described in `config via email address` section above)\r\n\r\n### procmail.js\r\n\r\nPipe email file through `stdin`. Compatible as [Postfix mailbox_command config](http://www.postfix.org/postconf.5.html#mailbox_command) or as `procmail` replacement.\r\n\r\n```\r\nnode procmail.js < sample.eml\r\n```\r\n\r\nNOTE: `email to` is used as account config, see `config via email address` section above\r\n\r\n### cli.js\r\n\r\nCommand line arguments\r\n\r\n```\r\nnode cli.js \"title of bug\" \"bug description body\"\r\n```\r\n\r\n## Changelog\r\n\r\n* `0.2.0` Issue description now shows sparkline image, reflecting error trend of past 7 days\r\n\r\n## LICENSE\r\n\r\nGPL v2\r\n\r\n---\r\nBrought to you by [RuntimeError.net](http://runtimeerror.net)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}